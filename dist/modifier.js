/* eslint-disable import/prefer-default-export */
import { isArray, isEmpty } from "lodash";
import Colors from "./color/_color";
export const generateStyleValue = (variants, values, defaultValues) => {
  const res = {};

  if (!isEmpty(variants) && !isEmpty(values)) {
    try {
      Object.keys(variants).forEach(variant => {
        Object.keys(values).forEach(valueKey => {
          let className;

          if (valueKey) {
            className = `${variant}-${valueKey}`;
          } else {
            className = `${variant}`;
          }

          const att = variants?.[variant];
          const value = values?.[valueKey];
          let obj = {};

          if (isArray(att)) {
            att.forEach(i => {
              obj[i] = value;
            });
          } else {
            obj[att] = value;
          }

          if (defaultValues) {
            obj = { ...obj,
              ...defaultValues
            };
          }

          res[className] = obj;
        });
      });
    } catch (error) {
      console.error("Generate style value errors", {
        error
      });
    }
  }

  return res;
};
export const getColorValue = color => {
  let value = color; //@ts-ignore

  if (Colors[color]) {
    //@ts-ignore
    value = Colors[color];
  }

  return value;
};
export const getThemeColor = ({
  colorDarkMode = "white",
  colorLightMode = "black",
  colorScheme
}) => {
  if (colorScheme === "dark") {
    return colorDarkMode;
  }

  return colorLightMode;
};
export default {
  generateStyleValue,
  getColorValue
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc0FycmF5IiwiaXNFbXB0eSIsIkNvbG9ycyIsImdlbmVyYXRlU3R5bGVWYWx1ZSIsInZhcmlhbnRzIiwidmFsdWVzIiwiZGVmYXVsdFZhbHVlcyIsInJlcyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwidmFyaWFudCIsInZhbHVlS2V5IiwiY2xhc3NOYW1lIiwiYXR0IiwidmFsdWUiLCJvYmoiLCJpIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2V0Q29sb3JWYWx1ZSIsImNvbG9yIiwiZ2V0VGhlbWVDb2xvciIsImNvbG9yRGFya01vZGUiLCJjb2xvckxpZ2h0TW9kZSIsImNvbG9yU2NoZW1lIl0sInNvdXJjZXMiOlsiLi4vc3JjL21vZGlmaWVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQgKi9cblxuaW1wb3J0IHsgaXNBcnJheSwgaXNFbXB0eSB9IGZyb20gXCJsb2Rhc2hcIjtcbmltcG9ydCB7IENvbG9yU2NoZW1lTmFtZSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcbmltcG9ydCBDb2xvcnMgZnJvbSBcIi4vY29sb3IvX2NvbG9yXCI7XG5pbXBvcnQgeyBDb2xvcktleVR5cGUgfSBmcm9tIFwiLi9jb2xvci9fY29sb3JzLWRlZmF1bHRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJR2V0VGhlbWVDb2xvclByb3BzIHtcbiAgY29sb3JMaWdodE1vZGU/OiBDb2xvcktleVR5cGU7XG4gIGNvbG9yRGFya01vZGU/OiBDb2xvcktleVR5cGU7XG4gIGNvbG9yU2NoZW1lOiBDb2xvclNjaGVtZU5hbWU7XG59XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVN0eWxlVmFsdWUgPSAoXG4gIHZhcmlhbnRzOiBhbnksXG4gIHZhbHVlczogYW55LFxuICBkZWZhdWx0VmFsdWVzPzogYW55XG4pOiBhbnkgPT4ge1xuICBjb25zdCByZXM6IGFueSA9IHt9O1xuICBpZiAoIWlzRW1wdHkodmFyaWFudHMpICYmICFpc0VtcHR5KHZhbHVlcykpIHtcbiAgICB0cnkge1xuICAgICAgT2JqZWN0LmtleXModmFyaWFudHMpLmZvckVhY2goKHZhcmlhbnQpID0+IHtcbiAgICAgICAgT2JqZWN0LmtleXModmFsdWVzKS5mb3JFYWNoKCh2YWx1ZUtleSkgPT4ge1xuICAgICAgICAgIGxldCBjbGFzc05hbWU7XG4gICAgICAgICAgaWYgKHZhbHVlS2V5KSB7XG4gICAgICAgICAgICBjbGFzc05hbWUgPSBgJHt2YXJpYW50fS0ke3ZhbHVlS2V5fWA7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZSA9IGAke3ZhcmlhbnR9YDtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgYXR0ID0gdmFyaWFudHM/Llt2YXJpYW50IGFzIGFueV07XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSB2YWx1ZXM/Llt2YWx1ZUtleSBhcyBhbnldO1xuICAgICAgICAgIGxldCBvYmo6IGFueSA9IHt9O1xuICAgICAgICAgIGlmIChpc0FycmF5KGF0dCkpIHtcbiAgICAgICAgICAgIGF0dC5mb3JFYWNoKChpKSA9PiB7XG4gICAgICAgICAgICAgIG9ialtpXSA9IHZhbHVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9ialthdHRdID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChkZWZhdWx0VmFsdWVzKSB7XG4gICAgICAgICAgICBvYmogPSB7IC4uLm9iaiwgLi4uZGVmYXVsdFZhbHVlcyB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXNbY2xhc3NOYW1lXSA9IG9iajtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkdlbmVyYXRlIHN0eWxlIHZhbHVlIGVycm9yc1wiLCB7IGVycm9yIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldENvbG9yVmFsdWUgPSAoY29sb3I/OiBzdHJpbmcpID0+IHtcbiAgbGV0IHZhbHVlOiBhbnkgPSBjb2xvcjtcbiAgLy9AdHMtaWdub3JlXG4gIGlmIChDb2xvcnNbY29sb3JdKSB7XG4gICAgLy9AdHMtaWdub3JlXG4gICAgdmFsdWUgPSBDb2xvcnNbY29sb3JdIGFzIGFueTtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0VGhlbWVDb2xvciA9ICh7XG4gIGNvbG9yRGFya01vZGUgPSBcIndoaXRlXCIsXG4gIGNvbG9yTGlnaHRNb2RlID0gXCJibGFja1wiLFxuICBjb2xvclNjaGVtZSxcbn06IElHZXRUaGVtZUNvbG9yUHJvcHMpID0+IHtcbiAgaWYgKGNvbG9yU2NoZW1lID09PSBcImRhcmtcIikge1xuICAgIHJldHVybiBjb2xvckRhcmtNb2RlO1xuICB9XG4gIHJldHVybiBjb2xvckxpZ2h0TW9kZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2VuZXJhdGVTdHlsZVZhbHVlLFxuICBnZXRDb2xvclZhbHVlLFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxTQUFTQSxPQUFULEVBQWtCQyxPQUFsQixRQUFpQyxRQUFqQztBQUVBLE9BQU9DLE1BQVA7QUFTQSxPQUFPLE1BQU1DLGtCQUFrQixHQUFHLENBQ2hDQyxRQURnQyxFQUVoQ0MsTUFGZ0MsRUFHaENDLGFBSGdDLEtBSXhCO0VBQ1IsTUFBTUMsR0FBUSxHQUFHLEVBQWpCOztFQUNBLElBQUksQ0FBQ04sT0FBTyxDQUFDRyxRQUFELENBQVIsSUFBc0IsQ0FBQ0gsT0FBTyxDQUFDSSxNQUFELENBQWxDLEVBQTRDO0lBQzFDLElBQUk7TUFDRkcsTUFBTSxDQUFDQyxJQUFQLENBQVlMLFFBQVosRUFBc0JNLE9BQXRCLENBQStCQyxPQUFELElBQWE7UUFDekNILE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixNQUFaLEVBQW9CSyxPQUFwQixDQUE2QkUsUUFBRCxJQUFjO1VBQ3hDLElBQUlDLFNBQUo7O1VBQ0EsSUFBSUQsUUFBSixFQUFjO1lBQ1pDLFNBQVMsR0FBSSxHQUFFRixPQUFRLElBQUdDLFFBQVMsRUFBbkM7VUFDRCxDQUZELE1BRU87WUFDTEMsU0FBUyxHQUFJLEdBQUVGLE9BQVEsRUFBdkI7VUFDRDs7VUFDRCxNQUFNRyxHQUFHLEdBQUdWLFFBQVEsR0FBR08sT0FBSCxDQUFwQjtVQUNBLE1BQU1JLEtBQUssR0FBR1YsTUFBTSxHQUFHTyxRQUFILENBQXBCO1VBQ0EsSUFBSUksR0FBUSxHQUFHLEVBQWY7O1VBQ0EsSUFBSWhCLE9BQU8sQ0FBQ2MsR0FBRCxDQUFYLEVBQWtCO1lBQ2hCQSxHQUFHLENBQUNKLE9BQUosQ0FBYU8sQ0FBRCxJQUFPO2NBQ2pCRCxHQUFHLENBQUNDLENBQUQsQ0FBSCxHQUFTRixLQUFUO1lBQ0QsQ0FGRDtVQUdELENBSkQsTUFJTztZQUNMQyxHQUFHLENBQUNGLEdBQUQsQ0FBSCxHQUFXQyxLQUFYO1VBQ0Q7O1VBQ0QsSUFBSVQsYUFBSixFQUFtQjtZQUNqQlUsR0FBRyxHQUFHLEVBQUUsR0FBR0EsR0FBTDtjQUFVLEdBQUdWO1lBQWIsQ0FBTjtVQUNEOztVQUNEQyxHQUFHLENBQUNNLFNBQUQsQ0FBSCxHQUFpQkcsR0FBakI7UUFDRCxDQXJCRDtNQXNCRCxDQXZCRDtJQXdCRCxDQXpCRCxDQXlCRSxPQUFPRSxLQUFQLEVBQWM7TUFDZEMsT0FBTyxDQUFDRCxLQUFSLENBQWMsNkJBQWQsRUFBNkM7UUFBRUE7TUFBRixDQUE3QztJQUNEO0VBQ0Y7O0VBQ0QsT0FBT1gsR0FBUDtBQUNELENBckNNO0FBdUNQLE9BQU8sTUFBTWEsYUFBYSxHQUFJQyxLQUFELElBQW9CO0VBQy9DLElBQUlOLEtBQVUsR0FBR00sS0FBakIsQ0FEK0MsQ0FFL0M7O0VBQ0EsSUFBSW5CLE1BQU0sQ0FBQ21CLEtBQUQsQ0FBVixFQUFtQjtJQUNqQjtJQUNBTixLQUFLLEdBQUdiLE1BQU0sQ0FBQ21CLEtBQUQsQ0FBZDtFQUNEOztFQUNELE9BQU9OLEtBQVA7QUFDRCxDQVJNO0FBVVAsT0FBTyxNQUFNTyxhQUFhLEdBQUcsQ0FBQztFQUM1QkMsYUFBYSxHQUFHLE9BRFk7RUFFNUJDLGNBQWMsR0FBRyxPQUZXO0VBRzVCQztBQUg0QixDQUFELEtBSUY7RUFDekIsSUFBSUEsV0FBVyxLQUFLLE1BQXBCLEVBQTRCO0lBQzFCLE9BQU9GLGFBQVA7RUFDRDs7RUFDRCxPQUFPQyxjQUFQO0FBQ0QsQ0FUTTtBQVdQLGVBQWU7RUFDYnJCLGtCQURhO0VBRWJpQjtBQUZhLENBQWYifQ==