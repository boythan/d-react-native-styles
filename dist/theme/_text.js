/* eslint-disable no-plusplus */
import { StyleSheet } from 'react-native';
import Colors from "../color/_color";
import Fonts from "../font/_font";
import { generateStyleValue } from "../modifier";
export const TEXT_ALIGN_VARIANTS = {
  text: 'textAlign'
};
export const TEXT_DECOR_VARIANTS = {
  text: 'textDecorationLine'
};
export const TEXT_TRANSFORM_VARIANTS = {
  text: 'textTransform'
};
export const FONT_WEIGHT_VARIANT = {
  'font-weight': 'fontWeight'
};
export const FONT_SIZE_VARIANT = {
  'font-size': 'fontSize'
};
const textSizeClass = {};

for (let i = 0; i < 100; i++) {
  textSizeClass[`font-size-${i}`] = {
    fontSize: i
  };
}

const textLineHeightClass = {};

for (let i = 0; i <= 50; i += 1) {
  textLineHeightClass[`line-height-${i}`] = {
    lineHeight: i
  };
}

export const FONT_WEIGHT_VALUE = {
  100: '100',
  200: '200',
  300: '300',
  400: '400',
  500: '500',
  600: '600',
  700: '700',
  800: '800',
  900: '900',
  normal: 'normal',
  bold: 'bold'
};
export const TEXT_ALIGN_VALUE = {
  auto: 'auto',
  start: 'left',
  left: 'left',
  end: 'right',
  right: 'right',
  center: 'center',
  justify: 'justify'
};
export const TEXT_DECOR_VALUE = {
  none: 'none',
  underline: 'underline',
  'line-through': 'line-through',
  'underline line-through': 'underline line-through'
};
export const TEXT_TRANSFORM_VALUE = {
  capitalize: 'capitalize',
  uppercase: 'uppercase',
  lowercase: 'lowercase'
};
const textColorClass = generateStyleValue({
  text: 'color'
}, Colors);
const textAlignClass = generateStyleValue(TEXT_ALIGN_VARIANTS, TEXT_ALIGN_VALUE);
const textDecorClass = generateStyleValue(TEXT_DECOR_VARIANTS, TEXT_DECOR_VALUE);
const textTransformClass = generateStyleValue(TEXT_TRANSFORM_VARIANTS, TEXT_TRANSFORM_VALUE);
const fontWeightClass = generateStyleValue(FONT_WEIGHT_VARIANT, FONT_WEIGHT_VALUE);
const textStyle = StyleSheet.create({ ...textColorClass,
  ...textAlignClass,
  ...textDecorClass,
  ...textTransformClass,
  ...textSizeClass,
  ...fontWeightClass,
  ...textLineHeightClass,
  ...Fonts.fontClass
});
export default textStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZVNoZWV0IiwiQ29sb3JzIiwiRm9udHMiLCJnZW5lcmF0ZVN0eWxlVmFsdWUiLCJURVhUX0FMSUdOX1ZBUklBTlRTIiwidGV4dCIsIlRFWFRfREVDT1JfVkFSSUFOVFMiLCJURVhUX1RSQU5TRk9STV9WQVJJQU5UUyIsIkZPTlRfV0VJR0hUX1ZBUklBTlQiLCJGT05UX1NJWkVfVkFSSUFOVCIsInRleHRTaXplQ2xhc3MiLCJpIiwiZm9udFNpemUiLCJ0ZXh0TGluZUhlaWdodENsYXNzIiwibGluZUhlaWdodCIsIkZPTlRfV0VJR0hUX1ZBTFVFIiwibm9ybWFsIiwiYm9sZCIsIlRFWFRfQUxJR05fVkFMVUUiLCJhdXRvIiwic3RhcnQiLCJsZWZ0IiwiZW5kIiwicmlnaHQiLCJjZW50ZXIiLCJqdXN0aWZ5IiwiVEVYVF9ERUNPUl9WQUxVRSIsIm5vbmUiLCJ1bmRlcmxpbmUiLCJURVhUX1RSQU5TRk9STV9WQUxVRSIsImNhcGl0YWxpemUiLCJ1cHBlcmNhc2UiLCJsb3dlcmNhc2UiLCJ0ZXh0Q29sb3JDbGFzcyIsInRleHRBbGlnbkNsYXNzIiwidGV4dERlY29yQ2xhc3MiLCJ0ZXh0VHJhbnNmb3JtQ2xhc3MiLCJmb250V2VpZ2h0Q2xhc3MiLCJ0ZXh0U3R5bGUiLCJjcmVhdGUiLCJmb250Q2xhc3MiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdGhlbWUvX3RleHQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tcGx1c3BsdXMgKi9cbmltcG9ydCB7U3R5bGVTaGVldH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBDb2xvcnMgZnJvbSAnLi4vY29sb3IvX2NvbG9yJztcbmltcG9ydCBGb250cyBmcm9tICcuLi9mb250L19mb250JztcbmltcG9ydCB7Z2VuZXJhdGVTdHlsZVZhbHVlfSBmcm9tICcuLi9tb2RpZmllcic7XG5cbmV4cG9ydCBjb25zdCBURVhUX0FMSUdOX1ZBUklBTlRTID0ge3RleHQ6ICd0ZXh0QWxpZ24nfTtcbmV4cG9ydCBjb25zdCBURVhUX0RFQ09SX1ZBUklBTlRTID0ge3RleHQ6ICd0ZXh0RGVjb3JhdGlvbkxpbmUnfTtcbmV4cG9ydCBjb25zdCBURVhUX1RSQU5TRk9STV9WQVJJQU5UUyA9IHt0ZXh0OiAndGV4dFRyYW5zZm9ybSd9O1xuZXhwb3J0IGNvbnN0IEZPTlRfV0VJR0hUX1ZBUklBTlQgPSB7J2ZvbnQtd2VpZ2h0JzogJ2ZvbnRXZWlnaHQnfTtcbmV4cG9ydCBjb25zdCBGT05UX1NJWkVfVkFSSUFOVCA9IHsnZm9udC1zaXplJzogJ2ZvbnRTaXplJ307XG5cbmNvbnN0IHRleHRTaXplQ2xhc3M6IGFueSA9IHt9O1xuZm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykge1xuICB0ZXh0U2l6ZUNsYXNzW2Bmb250LXNpemUtJHtpfWBdID0ge1xuICAgIGZvbnRTaXplOiBpLFxuICB9O1xufVxuXG5jb25zdCB0ZXh0TGluZUhlaWdodENsYXNzOiBhbnkgPSB7fTtcbmZvciAobGV0IGkgPSAwOyBpIDw9IDUwOyBpICs9IDEpIHtcbiAgdGV4dExpbmVIZWlnaHRDbGFzc1tgbGluZS1oZWlnaHQtJHtpfWBdID0ge1xuICAgIGxpbmVIZWlnaHQ6IGksXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBGT05UX1dFSUdIVF9WQUxVRSA9IHtcbiAgMTAwOiAnMTAwJyxcbiAgMjAwOiAnMjAwJyxcbiAgMzAwOiAnMzAwJyxcbiAgNDAwOiAnNDAwJyxcbiAgNTAwOiAnNTAwJyxcbiAgNjAwOiAnNjAwJyxcbiAgNzAwOiAnNzAwJyxcbiAgODAwOiAnODAwJyxcbiAgOTAwOiAnOTAwJyxcbiAgbm9ybWFsOiAnbm9ybWFsJyxcbiAgYm9sZDogJ2JvbGQnLFxufTtcblxuZXhwb3J0IGNvbnN0IFRFWFRfQUxJR05fVkFMVUUgPSB7XG4gIGF1dG86ICdhdXRvJyxcbiAgc3RhcnQ6ICdsZWZ0JyxcbiAgbGVmdDogJ2xlZnQnLFxuICBlbmQ6ICdyaWdodCcsXG4gIHJpZ2h0OiAncmlnaHQnLFxuICBjZW50ZXI6ICdjZW50ZXInLFxuICBqdXN0aWZ5OiAnanVzdGlmeScsXG59O1xuXG5leHBvcnQgY29uc3QgVEVYVF9ERUNPUl9WQUxVRSA9IHtcbiAgbm9uZTogJ25vbmUnLFxuICB1bmRlcmxpbmU6ICd1bmRlcmxpbmUnLFxuICAnbGluZS10aHJvdWdoJzogJ2xpbmUtdGhyb3VnaCcsXG4gICd1bmRlcmxpbmUgbGluZS10aHJvdWdoJzogJ3VuZGVybGluZSBsaW5lLXRocm91Z2gnLFxufTtcblxuZXhwb3J0IGNvbnN0IFRFWFRfVFJBTlNGT1JNX1ZBTFVFID0ge1xuICBjYXBpdGFsaXplOiAnY2FwaXRhbGl6ZScsXG4gIHVwcGVyY2FzZTogJ3VwcGVyY2FzZScsXG4gIGxvd2VyY2FzZTogJ2xvd2VyY2FzZScsXG59O1xuXG5jb25zdCB0ZXh0Q29sb3JDbGFzcyA9IGdlbmVyYXRlU3R5bGVWYWx1ZSh7dGV4dDogJ2NvbG9yJ30sIENvbG9ycyk7XG5jb25zdCB0ZXh0QWxpZ25DbGFzcyA9IGdlbmVyYXRlU3R5bGVWYWx1ZShcbiAgVEVYVF9BTElHTl9WQVJJQU5UUyxcbiAgVEVYVF9BTElHTl9WQUxVRSxcbik7XG5cbmNvbnN0IHRleHREZWNvckNsYXNzID0gZ2VuZXJhdGVTdHlsZVZhbHVlKFxuICBURVhUX0RFQ09SX1ZBUklBTlRTLFxuICBURVhUX0RFQ09SX1ZBTFVFLFxuKTtcblxuY29uc3QgdGV4dFRyYW5zZm9ybUNsYXNzID0gZ2VuZXJhdGVTdHlsZVZhbHVlKFxuICBURVhUX1RSQU5TRk9STV9WQVJJQU5UUyxcbiAgVEVYVF9UUkFOU0ZPUk1fVkFMVUUsXG4pO1xuXG5jb25zdCBmb250V2VpZ2h0Q2xhc3MgPSBnZW5lcmF0ZVN0eWxlVmFsdWUoXG4gIEZPTlRfV0VJR0hUX1ZBUklBTlQsXG4gIEZPTlRfV0VJR0hUX1ZBTFVFLFxuKTtcblxuY29uc3QgdGV4dFN0eWxlID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAuLi50ZXh0Q29sb3JDbGFzcyxcbiAgLi4udGV4dEFsaWduQ2xhc3MsXG4gIC4uLnRleHREZWNvckNsYXNzLFxuICAuLi50ZXh0VHJhbnNmb3JtQ2xhc3MsXG4gIC4uLnRleHRTaXplQ2xhc3MsXG4gIC4uLmZvbnRXZWlnaHRDbGFzcyxcbiAgLi4udGV4dExpbmVIZWlnaHRDbGFzcyxcbiAgLi4uRm9udHMuZm9udENsYXNzLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHRleHRTdHlsZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxTQUFRQSxVQUFSLFFBQXlCLGNBQXpCO0FBQ0EsT0FBT0MsTUFBUDtBQUNBLE9BQU9DLEtBQVA7QUFDQSxTQUFRQyxrQkFBUjtBQUVBLE9BQU8sTUFBTUMsbUJBQW1CLEdBQUc7RUFBQ0MsSUFBSSxFQUFFO0FBQVAsQ0FBNUI7QUFDUCxPQUFPLE1BQU1DLG1CQUFtQixHQUFHO0VBQUNELElBQUksRUFBRTtBQUFQLENBQTVCO0FBQ1AsT0FBTyxNQUFNRSx1QkFBdUIsR0FBRztFQUFDRixJQUFJLEVBQUU7QUFBUCxDQUFoQztBQUNQLE9BQU8sTUFBTUcsbUJBQW1CLEdBQUc7RUFBQyxlQUFlO0FBQWhCLENBQTVCO0FBQ1AsT0FBTyxNQUFNQyxpQkFBaUIsR0FBRztFQUFDLGFBQWE7QUFBZCxDQUExQjtBQUVQLE1BQU1DLGFBQWtCLEdBQUcsRUFBM0I7O0FBQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLEdBQXBCLEVBQXlCQSxDQUFDLEVBQTFCLEVBQThCO0VBQzVCRCxhQUFhLENBQUUsYUFBWUMsQ0FBRSxFQUFoQixDQUFiLEdBQWtDO0lBQ2hDQyxRQUFRLEVBQUVEO0VBRHNCLENBQWxDO0FBR0Q7O0FBRUQsTUFBTUUsbUJBQXdCLEdBQUcsRUFBakM7O0FBQ0EsS0FBSyxJQUFJRixDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxJQUFJLEVBQXJCLEVBQXlCQSxDQUFDLElBQUksQ0FBOUIsRUFBaUM7RUFDL0JFLG1CQUFtQixDQUFFLGVBQWNGLENBQUUsRUFBbEIsQ0FBbkIsR0FBMEM7SUFDeENHLFVBQVUsRUFBRUg7RUFENEIsQ0FBMUM7QUFHRDs7QUFFRCxPQUFPLE1BQU1JLGlCQUFpQixHQUFHO0VBQy9CLEtBQUssS0FEMEI7RUFFL0IsS0FBSyxLQUYwQjtFQUcvQixLQUFLLEtBSDBCO0VBSS9CLEtBQUssS0FKMEI7RUFLL0IsS0FBSyxLQUwwQjtFQU0vQixLQUFLLEtBTjBCO0VBTy9CLEtBQUssS0FQMEI7RUFRL0IsS0FBSyxLQVIwQjtFQVMvQixLQUFLLEtBVDBCO0VBVS9CQyxNQUFNLEVBQUUsUUFWdUI7RUFXL0JDLElBQUksRUFBRTtBQVh5QixDQUExQjtBQWNQLE9BQU8sTUFBTUMsZ0JBQWdCLEdBQUc7RUFDOUJDLElBQUksRUFBRSxNQUR3QjtFQUU5QkMsS0FBSyxFQUFFLE1BRnVCO0VBRzlCQyxJQUFJLEVBQUUsTUFId0I7RUFJOUJDLEdBQUcsRUFBRSxPQUp5QjtFQUs5QkMsS0FBSyxFQUFFLE9BTHVCO0VBTTlCQyxNQUFNLEVBQUUsUUFOc0I7RUFPOUJDLE9BQU8sRUFBRTtBQVBxQixDQUF6QjtBQVVQLE9BQU8sTUFBTUMsZ0JBQWdCLEdBQUc7RUFDOUJDLElBQUksRUFBRSxNQUR3QjtFQUU5QkMsU0FBUyxFQUFFLFdBRm1CO0VBRzlCLGdCQUFnQixjQUhjO0VBSTlCLDBCQUEwQjtBQUpJLENBQXpCO0FBT1AsT0FBTyxNQUFNQyxvQkFBb0IsR0FBRztFQUNsQ0MsVUFBVSxFQUFFLFlBRHNCO0VBRWxDQyxTQUFTLEVBQUUsV0FGdUI7RUFHbENDLFNBQVMsRUFBRTtBQUh1QixDQUE3QjtBQU1QLE1BQU1DLGNBQWMsR0FBRzlCLGtCQUFrQixDQUFDO0VBQUNFLElBQUksRUFBRTtBQUFQLENBQUQsRUFBa0JKLE1BQWxCLENBQXpDO0FBQ0EsTUFBTWlDLGNBQWMsR0FBRy9CLGtCQUFrQixDQUN2Q0MsbUJBRHVDLEVBRXZDYyxnQkFGdUMsQ0FBekM7QUFLQSxNQUFNaUIsY0FBYyxHQUFHaEMsa0JBQWtCLENBQ3ZDRyxtQkFEdUMsRUFFdkNvQixnQkFGdUMsQ0FBekM7QUFLQSxNQUFNVSxrQkFBa0IsR0FBR2pDLGtCQUFrQixDQUMzQ0ksdUJBRDJDLEVBRTNDc0Isb0JBRjJDLENBQTdDO0FBS0EsTUFBTVEsZUFBZSxHQUFHbEMsa0JBQWtCLENBQ3hDSyxtQkFEd0MsRUFFeENPLGlCQUZ3QyxDQUExQztBQUtBLE1BQU11QixTQUFTLEdBQUd0QyxVQUFVLENBQUN1QyxNQUFYLENBQWtCLEVBQ2xDLEdBQUdOLGNBRCtCO0VBRWxDLEdBQUdDLGNBRitCO0VBR2xDLEdBQUdDLGNBSCtCO0VBSWxDLEdBQUdDLGtCQUorQjtFQUtsQyxHQUFHMUIsYUFMK0I7RUFNbEMsR0FBRzJCLGVBTitCO0VBT2xDLEdBQUd4QixtQkFQK0I7RUFRbEMsR0FBR1gsS0FBSyxDQUFDc0M7QUFSeUIsQ0FBbEIsQ0FBbEI7QUFXQSxlQUFlRixTQUFmIn0=