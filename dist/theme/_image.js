import { StyleSheet } from 'react-native';
import { generateStyleValue } from "../modifier";
const baseSize = 16;
export const RESIZE_VALUE = {
  contain: 'contain',
  cover: 'cover',
  stretch: 'stretch',
  repeat: 'repeat',
  center: 'center'
};
const resizeValueClass = generateStyleValue({
  resize: 'resizeMode'
}, RESIZE_VALUE);
const imageStyle = StyleSheet.create({
  'image-reg-tiny': {
    height: baseSize
  },
  'image-reg-xx-small': {
    height: baseSize * 1.4
  },
  'image-reg-x-small': {
    height: baseSize * 2
  },
  'image-reg-small': {
    height: baseSize * 3
  },
  'image-reg-medium': {
    height: baseSize * 4
  },
  'image-reg-large': {
    height: baseSize * 5
  },
  'image-reg-x-large': {
    height: baseSize * 6
  },
  'image-reg-xx-large': {
    height: baseSize * 7
  },
  'image-square-tiny': {
    width: baseSize,
    height: baseSize
  },
  'image-square-xx-small': {
    width: baseSize * 1.4,
    height: baseSize * 1.4
  },
  'image-square-x-small': {
    width: baseSize * 2,
    height: baseSize * 2
  },
  'image-square-small': {
    width: baseSize * 3,
    height: baseSize * 3
  },
  'image-square-medium': {
    width: baseSize * 4,
    height: baseSize * 4
  },
  'image-square-large': {
    width: baseSize * 5,
    height: baseSize * 5
  },
  'image-square-x-large': {
    width: baseSize * 6,
    height: baseSize * 6
  },
  'image-square-xx-large': {
    width: baseSize * 7,
    height: baseSize * 7
  },
  ...resizeValueClass
});
export default imageStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZVNoZWV0IiwiZ2VuZXJhdGVTdHlsZVZhbHVlIiwiYmFzZVNpemUiLCJSRVNJWkVfVkFMVUUiLCJjb250YWluIiwiY292ZXIiLCJzdHJldGNoIiwicmVwZWF0IiwiY2VudGVyIiwicmVzaXplVmFsdWVDbGFzcyIsInJlc2l6ZSIsImltYWdlU3R5bGUiLCJjcmVhdGUiLCJoZWlnaHQiLCJ3aWR0aCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90aGVtZS9faW1hZ2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTdHlsZVNoZWV0fSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHtnZW5lcmF0ZVN0eWxlVmFsdWV9IGZyb20gJy4uL21vZGlmaWVyJztcblxuY29uc3QgYmFzZVNpemUgPSAxNjtcblxuZXhwb3J0IGNvbnN0IFJFU0laRV9WQUxVRSA9IHtcbiAgY29udGFpbjogJ2NvbnRhaW4nLFxuICBjb3ZlcjogJ2NvdmVyJyxcbiAgc3RyZXRjaDogJ3N0cmV0Y2gnLFxuICByZXBlYXQ6ICdyZXBlYXQnLFxuICBjZW50ZXI6ICdjZW50ZXInLFxufTtcblxuY29uc3QgcmVzaXplVmFsdWVDbGFzcyA9IGdlbmVyYXRlU3R5bGVWYWx1ZShcbiAge3Jlc2l6ZTogJ3Jlc2l6ZU1vZGUnfSxcbiAgUkVTSVpFX1ZBTFVFLFxuKTtcblxuY29uc3QgaW1hZ2VTdHlsZSA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgJ2ltYWdlLXJlZy10aW55Jzoge1xuICAgIGhlaWdodDogYmFzZVNpemUsXG4gIH0sXG4gICdpbWFnZS1yZWcteHgtc21hbGwnOiB7XG4gICAgaGVpZ2h0OiBiYXNlU2l6ZSAqIDEuNCxcbiAgfSxcblxuICAnaW1hZ2UtcmVnLXgtc21hbGwnOiB7XG4gICAgaGVpZ2h0OiBiYXNlU2l6ZSAqIDIsXG4gIH0sXG5cbiAgJ2ltYWdlLXJlZy1zbWFsbCc6IHtcbiAgICBoZWlnaHQ6IGJhc2VTaXplICogMyxcbiAgfSxcblxuICAnaW1hZ2UtcmVnLW1lZGl1bSc6IHtcbiAgICBoZWlnaHQ6IGJhc2VTaXplICogNCxcbiAgfSxcblxuICAnaW1hZ2UtcmVnLWxhcmdlJzoge1xuICAgIGhlaWdodDogYmFzZVNpemUgKiA1LFxuICB9LFxuXG4gICdpbWFnZS1yZWcteC1sYXJnZSc6IHtcbiAgICBoZWlnaHQ6IGJhc2VTaXplICogNixcbiAgfSxcblxuICAnaW1hZ2UtcmVnLXh4LWxhcmdlJzoge1xuICAgIGhlaWdodDogYmFzZVNpemUgKiA3LFxuICB9LFxuXG4gICdpbWFnZS1zcXVhcmUtdGlueSc6IHtcbiAgICB3aWR0aDogYmFzZVNpemUsXG4gICAgaGVpZ2h0OiBiYXNlU2l6ZSxcbiAgfSxcblxuICAnaW1hZ2Utc3F1YXJlLXh4LXNtYWxsJzoge1xuICAgIHdpZHRoOiBiYXNlU2l6ZSAqIDEuNCxcbiAgICBoZWlnaHQ6IGJhc2VTaXplICogMS40LFxuICB9LFxuXG4gICdpbWFnZS1zcXVhcmUteC1zbWFsbCc6IHtcbiAgICB3aWR0aDogYmFzZVNpemUgKiAyLFxuICAgIGhlaWdodDogYmFzZVNpemUgKiAyLFxuICB9LFxuICAnaW1hZ2Utc3F1YXJlLXNtYWxsJzoge1xuICAgIHdpZHRoOiBiYXNlU2l6ZSAqIDMsXG4gICAgaGVpZ2h0OiBiYXNlU2l6ZSAqIDMsXG4gIH0sXG4gICdpbWFnZS1zcXVhcmUtbWVkaXVtJzoge1xuICAgIHdpZHRoOiBiYXNlU2l6ZSAqIDQsXG4gICAgaGVpZ2h0OiBiYXNlU2l6ZSAqIDQsXG4gIH0sXG4gICdpbWFnZS1zcXVhcmUtbGFyZ2UnOiB7XG4gICAgd2lkdGg6IGJhc2VTaXplICogNSxcbiAgICBoZWlnaHQ6IGJhc2VTaXplICogNSxcbiAgfSxcbiAgJ2ltYWdlLXNxdWFyZS14LWxhcmdlJzoge1xuICAgIHdpZHRoOiBiYXNlU2l6ZSAqIDYsXG4gICAgaGVpZ2h0OiBiYXNlU2l6ZSAqIDYsXG4gIH0sXG4gICdpbWFnZS1zcXVhcmUteHgtbGFyZ2UnOiB7XG4gICAgd2lkdGg6IGJhc2VTaXplICogNyxcbiAgICBoZWlnaHQ6IGJhc2VTaXplICogNyxcbiAgfSxcbiAgLi4ucmVzaXplVmFsdWVDbGFzcyxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBpbWFnZVN0eWxlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFRQSxVQUFSLFFBQXlCLGNBQXpCO0FBQ0EsU0FBUUMsa0JBQVI7QUFFQSxNQUFNQyxRQUFRLEdBQUcsRUFBakI7QUFFQSxPQUFPLE1BQU1DLFlBQVksR0FBRztFQUMxQkMsT0FBTyxFQUFFLFNBRGlCO0VBRTFCQyxLQUFLLEVBQUUsT0FGbUI7RUFHMUJDLE9BQU8sRUFBRSxTQUhpQjtFQUkxQkMsTUFBTSxFQUFFLFFBSmtCO0VBSzFCQyxNQUFNLEVBQUU7QUFMa0IsQ0FBckI7QUFRUCxNQUFNQyxnQkFBZ0IsR0FBR1Isa0JBQWtCLENBQ3pDO0VBQUNTLE1BQU0sRUFBRTtBQUFULENBRHlDLEVBRXpDUCxZQUZ5QyxDQUEzQztBQUtBLE1BQU1RLFVBQVUsR0FBR1gsVUFBVSxDQUFDWSxNQUFYLENBQWtCO0VBQ25DLGtCQUFrQjtJQUNoQkMsTUFBTSxFQUFFWDtFQURRLENBRGlCO0VBSW5DLHNCQUFzQjtJQUNwQlcsTUFBTSxFQUFFWCxRQUFRLEdBQUc7RUFEQyxDQUphO0VBUW5DLHFCQUFxQjtJQUNuQlcsTUFBTSxFQUFFWCxRQUFRLEdBQUc7RUFEQSxDQVJjO0VBWW5DLG1CQUFtQjtJQUNqQlcsTUFBTSxFQUFFWCxRQUFRLEdBQUc7RUFERixDQVpnQjtFQWdCbkMsb0JBQW9CO0lBQ2xCVyxNQUFNLEVBQUVYLFFBQVEsR0FBRztFQURELENBaEJlO0VBb0JuQyxtQkFBbUI7SUFDakJXLE1BQU0sRUFBRVgsUUFBUSxHQUFHO0VBREYsQ0FwQmdCO0VBd0JuQyxxQkFBcUI7SUFDbkJXLE1BQU0sRUFBRVgsUUFBUSxHQUFHO0VBREEsQ0F4QmM7RUE0Qm5DLHNCQUFzQjtJQUNwQlcsTUFBTSxFQUFFWCxRQUFRLEdBQUc7RUFEQyxDQTVCYTtFQWdDbkMscUJBQXFCO0lBQ25CWSxLQUFLLEVBQUVaLFFBRFk7SUFFbkJXLE1BQU0sRUFBRVg7RUFGVyxDQWhDYztFQXFDbkMseUJBQXlCO0lBQ3ZCWSxLQUFLLEVBQUVaLFFBQVEsR0FBRyxHQURLO0lBRXZCVyxNQUFNLEVBQUVYLFFBQVEsR0FBRztFQUZJLENBckNVO0VBMENuQyx3QkFBd0I7SUFDdEJZLEtBQUssRUFBRVosUUFBUSxHQUFHLENBREk7SUFFdEJXLE1BQU0sRUFBRVgsUUFBUSxHQUFHO0VBRkcsQ0ExQ1c7RUE4Q25DLHNCQUFzQjtJQUNwQlksS0FBSyxFQUFFWixRQUFRLEdBQUcsQ0FERTtJQUVwQlcsTUFBTSxFQUFFWCxRQUFRLEdBQUc7RUFGQyxDQTlDYTtFQWtEbkMsdUJBQXVCO0lBQ3JCWSxLQUFLLEVBQUVaLFFBQVEsR0FBRyxDQURHO0lBRXJCVyxNQUFNLEVBQUVYLFFBQVEsR0FBRztFQUZFLENBbERZO0VBc0RuQyxzQkFBc0I7SUFDcEJZLEtBQUssRUFBRVosUUFBUSxHQUFHLENBREU7SUFFcEJXLE1BQU0sRUFBRVgsUUFBUSxHQUFHO0VBRkMsQ0F0RGE7RUEwRG5DLHdCQUF3QjtJQUN0QlksS0FBSyxFQUFFWixRQUFRLEdBQUcsQ0FESTtJQUV0QlcsTUFBTSxFQUFFWCxRQUFRLEdBQUc7RUFGRyxDQTFEVztFQThEbkMseUJBQXlCO0lBQ3ZCWSxLQUFLLEVBQUVaLFFBQVEsR0FBRyxDQURLO0lBRXZCVyxNQUFNLEVBQUVYLFFBQVEsR0FBRztFQUZJLENBOURVO0VBa0VuQyxHQUFHTztBQWxFZ0MsQ0FBbEIsQ0FBbkI7QUFxRUEsZUFBZUUsVUFBZiJ9